dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        maven { url 'https://raw.githubusercontent.com/saki4510t/libcommon/master/repository/' }
        maven { url 'https://gitee.com/liuchaoya/libcommon/raw/master/repository/' }
        maven { url "https://repo.eclipse.org/content/repositories/paho-snapshots/" }
        maven { url 'https://developer.huawei.com/repo/' }
        maven { url "https://jitpack.io" }
        maven { url 'https://www.jitpack.io' }
        mavenCentral()
        google()
    }
}

rootProject.name = "AInstallKit"
include ':app'
include ':manager'
include ':builder'
include ':builder:test'
include ':xapk'
include ':xapk:test'
include ':splits_ackpine'
include ':splits_ackpine:test'
//ALibKit_Jetbrains
include ':ALibKit_Jetbrains'
project(':ALibKit_Jetbrains').projectDir = new File("D:\\WorkSpace\\GitHub\\ALibKit_Jetbrains")
include ':ALibKit_Jetbrains:kotlin_stdlib'
include ':ALibKit_Jetbrains:kotlinx_coroutines'
//ALibKit_Jetpack
include ':ALibKit_Jetpack'
project(':ALibKit_Jetpack').projectDir = new File("D:\\WorkSpace\\GitHub\\ALibKit_Jetpack")
include ':ALibKit_Jetpack:startup'
include ':ALibKit_Jetpack:room'
include ':ALibKit_Jetpack:concurrent_futures'
include ':ALibKit_Jetpack:annotation'
include ':ALibKit_Jetpack:core'
include ':ALibKit_Jetpack:databinding'
//ALibKit_Android
include ':ALibKit_Android'
project(':ALibKit_Android').projectDir = new File("D:\\WorkSpace\\GitHub\\ALibKit_Android")
include ':ALibKit_Android:tools_build_apksig'
//ALibKit_Apache
include ':ALibKit_Apache'
project(':ALibKit_Apache').projectDir = new File("D:\\WorkSpace\\GitHub\\ALibKit_Apache")
include ':ALibKit_Apache:commons_compress'
//ALibKit_Google
include ':ALibKit_Google'
project(':ALibKit_Google').projectDir = new File("D:\\WorkSpace\\GitHub\\ALibKit_Google")
include ':ALibKit_Google:guava:listenablefuture'
include ':ALibKit_Google:material'
//KUtilKit
include ':KUtilKit'
project(':KUtilKit').projectDir = new File("D:\\WorkSpace\\GitHub\\KUtilKit")
include ':KUtilKit:android'
include ':KUtilKit:kotlin'
//ASwiftKit
include ':ASwiftKit'
project(':ASwiftKit').projectDir = new File("D:\\WorkSpace\\GitHub\\ASwiftKit")
include ':ASwiftKit:basick'
include ':ASwiftKit:xmlk'
include ':ASwiftKit:bindk'
//AStackKit
include ':AStackKit'
project(':AStackKit').projectDir = new File("D:\\WorkSpace\\GitHub\\AStackKit")
include ':AStackKit:basic'
include ':AStackKit:callback'
//AIOKit
include ':AIOKit'
project(':AIOKit').projectDir = new File("D:\\WorkSpace\\GitHub\\AIOKit")
include ':AIOKit:ztzip'
//ANetKit_okdownload
include ':ANetKit_okdownload'
project(':ANetKit_okdownload').projectDir = new File("D:\\WorkSpace\\GitHub\\ANetKit_okdownload")
include ':ANetKit_okdownload:okdownload'
//AManifestKit_XXPermissions
include ':AManifestKit_XXPermissions'
project(':AManifestKit_XXPermissions').projectDir = new File("D:\\WorkSpace\\GitHub\\AManifestKit_XXPermissions")
include ':AManifestKit_XXPermissions:manifestk_xxpermissions'
include ':AManifestKit_XXPermissions:library'
//AInstallKit_Ackpine
include ':AInstallKit_Ackpine'
project(':AInstallKit_Ackpine').projectDir = new File("D:\\WorkSpace\\GitHub\\AInstallKit_Ackpine")
include ':AInstallKit_Ackpine:ackpine-splits'
include ':AInstallKit_Ackpine:ackpine-ktx'
include ':AInstallKit_Ackpine:ackpine-core'
include ':AInstallKit_Ackpine:ackpine-runtime'
//AZipKit
include ':AZipKit'
project(':AZipKit').projectDir = new File("D:\\WorkSpace\\GitHub\\AZipKit")
include ':AZipKit:ztzip'